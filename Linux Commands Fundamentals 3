I've already practiced Linux commands in Tryhackme and HTB and will do this project on Ubuntu virtual machine from VirtualBox. 

Resources Used:
-https://www.virtualbox.org/wiki/Downloads
-https://ubuntu.com/#download
-https://tryhackme.com/room/linuxfundamentalspart3
-https://ubuntu.com/server/docs/how-to
-Akamai Developer https://www.youtube.com/watch?v=v952m13p-b4
-https://www.sublimetext.com/docs/linux_repositories.html

Environments Used:
-Ubuntu in Virtualbox

Started Ubuntu virtual machine and open a terminal. https://imgur.com/W8j1q1I

Terminal Text Editors

Nano editor make it easier to create and edit files instead of using 'echo' and operators '>' and '>>'.

Nano text editor commands
CTRL + G: Display help text
CTRL + O: Offer to write file ("Save as")
CTRL + K: Cut current line into cutbuffer
CTRL + T: Execute a function or an external command
CTRL + C: Display the position of the cursor 
CTRL + X: Close the current buffer, exit from nano
CTRL + R: Insert a file into current buffer, or into new buffer
CTRL + \: Replace a string or a regular expression
CTRL + U: Paste contents of cutbuffer
CTRL + J: Justify the current paragraph 
CTRL + /: Go to line and column number

Nano
Example: nano HarryPotter > Typed 'Daniel Radcliffe played the character Harry Potter.' > CTRL + O to save > Pressed Enter > CTRL + X to exit >  cat HarryPotter

Output: Daniel Radcliffe played the character Harry Potter.
Screenshot: https://imgur.com/HyKe7lB, https://imgur.com/3OsyRaF, https://imgur.com/2eD09v5

VIM is an advanced text editor. 
Customisable: You can modify the keyboard shortcuts to be of your choosing.
Syntax Highlighting: This is useful if you are writing or maintaining code.
VIM works on all terminals.


General/Useful Utilities

wget: Allows us to download files from the web. You can download script, picture, program, etc.
Example: wget https://www.nano-editor.org/dist/latest/nano.html > ls
Output: nano.html
Screenshot: https://imgur.com/wsi8IO9

scp: Short for secure copy. This command lets you securely copying files. Allows you to transfer files between two computers using the SSH protocol to provide both authentication and encryption. Copy files/directories from your current system to a remote system or 
copy files/directories from a remote system to your current system 
Example: scp apples.txt queen@XXX.XXX.X.XX:/home/queen/Apples2.txt
Output: It should show the renamed file Apples2.txt to the location you provided

http.server: Python3 provides a module called 'HTTPServer'. This module turns your computer into a web server that you can use to serve your own files, where they can then be downloaded by another computing using commands such as 'curl' and 'wget'. 
Example: python3 -m http.server > Opened new tab: wget http://XXX.X.X.XX:8000/apples.txt

Output: Serving HTTP on 0.0.0.0 port 8000 (http://0.0.0.0:8000/)
XX.X.X.XX - - [22/Feb/2024 18:24:37] "Get /apples.txt HTTP/1.1" 200 -

Connecting to XXX.X.X.XX:8000... connected.
HTTP request sent, awaiting response... 200 OK
Length: 22 [text/plain]
Saving to: 'apples.txt.1'

Screenshot: https://imgur.com/PmRUrx7, https://imgur.com/pBxKuSJ, https://imgur.com/3S9umMg, https://imgur.com/J7aYpbP


Processes 101

Processes are the programs that are running on your machine. They are managed by the kernel, where each process will have an ID associated with it, also known as its PID. The PID increments for the order In which the process starts. I.e. the 60th process will have a PID of 60.

Viewing Processes

ps: This command will show the list of running processes
Screenshot: https://imgur.com/diUfz78

ps aux: This command will let you see the processes run by other users and those that don't run from a session.
Screenshot: https://imgur.com/OzAor2N

top: This command will give you real-time statistics about the processes running on your system instead of a one-time view. These statistics will refresh every 10 seconds, but will also refresh when you use the arrow keys to browse the various rows.
Screenshot: https://imgur.com/rq8Na50

Managing Processes

kill: You can kill a command usig 'kill' and the associated PID that we wish to kill.

Below are some of the signals that we can send to a process when it is killed:
SIGTERM - Kill the process, but allow it to do some cleanup tasks beforehand
SIGKILL - Kill the process - doesn't do any cleanup after the fact
SIGSTOP - Stop/suspend a process
 
Example 1: kill 1709
Example 2: sigterm 1709
Example 3: sigkill 1709
Example 4: sigstop 1709

Getting Processes/Services to Start on Boot

systemctl: This command allows us to interact with the systemd process/daemon.

There are four options you can use with systemctl:
Start
Stop
Enable
Disable

Example 1: systemctl start apache2
Example 2: systemctl stop apache2
Example 3: systemctl enable apache2
Example 4: systemctl disable apache2

An Introduction to Backgrounding and Foregrounding in Linux

Processes can run in two states: In the background and in the foreground. 

Foreground Example: echo "Hello World"
Output: Hello World

Background Example: echo "Hello World" &
Output: [1] 3571
Hello World

Screenshot: https://imgur.com/zZZmzzc, https://imgur.com/74eeoMP

Foregrounding a process

fg: This command can be used to bring the background process back into use on the terminal.
Example: root@Ubuntu:/$ /var/opt# fg


Maintaining Your System: Automation

cron: The system's main scheduler for running jobs or tasks unattended.
crontab: Allows the user to submit, edit or delete entries to cron. A crontab file is a user file that holds the scheduling information.

Crontabs require 6 specific values:
MIN:	What minute to execute at. It ranges from 0 to 59.
HOUR:	What hour to execute at. It spans from 0 to 23.
DOM:	What day of the month to execute at. It ranges from 1 to 31.
MON:	What month of the year to execute at. It varies from 1 to 12.
DOW:	What day of the week to execute at. It is represented by numbers from 0 to 6, where both 0 and 6 correspond to Sunday.
CMD:	The actual command that will be executed. 

Crontab is located in /root/etc/crontab. This will display your crontabs and description of the crontab. 
In the terminal: 'cd /' > 'cat /etc/crontab'
Screenshot: https://imgur.com/Qcj3b4y

crontab -l: List all the cron jobs of the user we're logged in with.
Screenshot: https://imgur.com/Sz5ihSl

crontab -e: This command allows you to create a cron job and see current/previous jobs. I select the Nano editor.
Screenshot: https://imgur.com/Dl1hwco, https://imgur.com/NUYVHQE

Example: 51 22 * * * echo "Testing a cool feature" > /home/queen/testing.txt
CTRL + O > Presses Enter > CTRL + X > crontab -l > ls > cat testing.txt
Output: Testing a cool feature
Screenshots: https://imgur.com/ns6j4iY, https://imgur.com/rX6bJVT, https://imgur.com/s3zCTH0

create/edit cron as a different user. Selected Nano editor.
sudo crontab -u queen -e

View different user cron jobs.
sudo crontab -u queen -l

Tip: You can have a cron job run hourly, daily, weekly, and monthly. '>>' means you can add it to the bottom line of an existing cron job.

Example 1: @hourly echo "This is a test" >> /home/queen/testing.txt
Example 2: @daily echo "This is a test" > /home/queen/testing.txt
Example 3: @weekly echo "This is a test" >> /home/queen/testing.txt
Example 4: @monthly echo "This is a test" > /home/queen/testing.txt


Maintaining Your System: Package Management

When developers wish to submit software to the community, they will submit it to an  "apt" repository. If approved, their programs and tools will be released 

In the terminal:
'cd /' > 'ls /etc/apt'
Output: apt.conf.d keyrings sources.list
Screenshot: https://imgur.com/pMa6VFt

Managing Your Repositories (Adding and Removing)

apt: Short for Advanced Packaging Tool. The commands contained within 'apt' provide the means for installing new software packages, upgrading existing software packages, updating the package list index, and even upgrading the entire Ubuntu system.

add-apt-repository: This command allows you to add additional repositories or by listing another provider.

dpkg: Short for Debian package. This commands allows you to install, remove, and build packages, but unlike other package management systems, it cannot automatically download and install packages â€“ or their dependencies.

Example:
Add the text editor Sublime Text to my Ubuntu machine as a repository. When adding software, the integrity of what we download is guaranteed by the use of what is called GPG (Gnu Privacy Guard) keys. These keys are essentially a safety check from the developers saying, "here's our software". If the keys do not match up to what your system trusts and what the developers used, then the software will not be downloaded. 

Step 1: Install the GPG key: wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/sublimehq-archive.gpg > /dev/null

Step 2: Select the channel to use: echo "deb https://download.sublimetext.com/ apt/stable/" | sudo tee /etc/apt/sources.list.d/sublime-text.list

Step 3: Update apt sources and install Sublime Text: 
sudo apt-get update
sudo apt-get install sublime-text

Tip: If this fails ensure apt is set up to work with https sources: sudo apt-get install apt-transport-https

Screenshots:  


